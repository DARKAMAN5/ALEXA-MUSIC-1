from datetime import datetime
from sys import version_info
from time import time

from config import (
    ALIVE_IMG,
    ALIVE_NAME,
    BOT_NAME,
    BOT_USERNAME,
    GROUP_SUPPORT,
    OWNER_NAME,
    UPDATES_CHANNEL,
)
from handlers import __version__
from helpers.decorators import sudo_users_only
from helpers.filters import command
from pyrogram import Client, filters
from pyrogram import __version__ as pyrover
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup, Message

__major__ = 0
__minor__ = 2
__micro__ = 1

__python_version__ = f"{version_info[0]}.{version_info[1]}.{version_info[2]}"


START_TIME = datetime.utcnow()
START_TIME_ISO = START_TIME.replace(microsecond=0).isoformat()
TIME_DURATION_UNITS = (
    ("week", 60 * 60 * 24 * 7),
    ("day", 60 * 60 * 24),
    ("hour", 60 * 60),
    ("min", 60),
    ("sec", 1),
)


async def _human_time_duration(seconds):
    if seconds == 0:
        return "inf"
    parts = []
    for unit, div in TIME_DURATION_UNITS:
        amount, seconds = divmod(int(seconds), div)
        if amount > 0:
            parts.append("{} {}{}".format(amount, unit, "" if amount == 1 else "s"))
    return ", ".join(parts)


@Client.on_message(
    command(["start", f"start@{BOT_USERNAME}"]) & filters.private & ~filters.edited
)
async def start_(client: Client, message: Message):
    await message.reply_text(
        f"""‚ú® **·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á {message.from_user.mention()} !**\n
üí≠ **[{BOT_NAME}](https://t.me/{BOT_USERNAME}) ·¥Ä ü ü·¥è·¥°s  è·¥è·¥ú ·¥õ·¥è ·¥ò ü·¥Ä è ·¥ç·¥ús…™·¥Ñ ·¥è…¥ …¢ Ä·¥è·¥ú·¥òs ·¥õ ú Ä·¥è·¥ú…¢ ú·¥õ ·¥õ ú·¥á …¥·¥á·¥° ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç's ·¥†·¥è…™·¥Ñ·¥á ·¥Ñ ú·¥Ä·¥õs!**

üí° **“ì…™…¥·¥Ö ·¥è·¥ú·¥õ ·¥Ä ü ü ·¥õ ú·¥á  ô·¥è·¥õ,s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös ·¥Ä…¥·¥Ö  ú·¥è·¥° ·¥õ ú·¥á è ·¥°·¥è Ä·¥ã  ô è ·¥Ñ ü…™·¥Ñ·¥ã…™…¥…¢ ·¥è…¥ ·¥õ ú·¥á ¬ª ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös  ô·¥ú·¥õ·¥õ·¥è…¥!**""",
        reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "‚ô®Ô∏è«ü…ñ…ñ  ç…õ »∂÷Ö  è÷Ö ä Ä …¢ Ä÷Ö ä÷Ñ‚ô®Ô∏è",
                        url=f"https://t.me/{BOT_USERNAME}?startgroup=true",
                    )
                ],
                [InlineKeyboardButton("‚ú®…Æ«ü÷Ü…®∆à …¢ ä…®…ñ…õ‚ú®", callback_data="cbhowtouse")],
                [
                    InlineKeyboardButton("ü•≥∆à÷Ö ç ç«ü’º…ñ÷Üü•≥", callback_data="cbcmds"),
                    InlineKeyboardButton("‚ò£Ô∏è∆à Ä…õ«ü»∂…õ Ä‚ò£Ô∏è", url=f"https://t.me/{OWNER_NAME}"),
                ],
                [
                    InlineKeyboardButton(
                        "ü•∞÷Ü ä÷Ñ÷Ñ÷Ö Ä»∂ …¢ Ä÷Ö ä÷Ñü•∞", url=f"https://t.me/{GROUP_SUPPORT}"
                    ),
                    InlineKeyboardButton(
                        "üáÆüá≥ ä÷Ñ…ñ«ü»∂…õ÷Ü ∆à…¶«ü’º’º…õ üüáÆüá≥", url=f"https://t.me/{UPDATES_CHANNEL}"
                    ),
                ],
                [
                    InlineKeyboardButton(
                        "üñ±Ô∏è«ü ü…õ”º«ü  Ä÷Ö…Æ÷Ö»∂üñ±Ô∏è", url="https://t.me/ALEXA_MANAGER_ROBOT"
                    )
                ],
            ]
        ),
        disable_web_page_preview=True,
    )


@Client.on_message(
    command(["start", f"start@{BOT_USERNAME}"]) & filters.group & ~filters.edited
)
async def start(client: Client, message: Message):
    current_time = datetime.utcnow()
    uptime_sec = (current_time - START_TIME).total_seconds()
    uptime = await _human_time_duration(int(uptime_sec))

    keyboard = InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton("ü•∞…¢ Ä÷Ö ä÷Ñü•∞", url=f"https://t.me/{GROUP_SUPPORT}"),
                InlineKeyboardButton(
                    "üáÆüá≥∆à…¶«ü’º’º…õ üüáÆüá≥", url=f"https://t.me/{UPDATES_CHANNEL}"
                ),
            ]
        ]
    )

    alive = f"** ú·¥á ü ü·¥è {message.from_user.mention()}, …™'·¥ç {BOT_NAME}**\n\n‚ú®  ô·¥è·¥õ …™s ·¥°·¥è Ä·¥ã…™…¥…¢ …¥·¥è Ä·¥ç·¥Ä ü ü è\nüçÄ ·¥ç è ·¥ç·¥Äs·¥õ·¥á Ä: [{ALIVE_NAME}](https://t.me/{OWNER_NAME})\n‚ú®  ô·¥è·¥õ ·¥†·¥á Äs…™·¥è…¥: `v{__version__}`\nüçÄ ·¥ò è Ä·¥è…¢ Ä·¥Ä·¥ç ·¥†·¥á Äs…™·¥è…¥: `{pyrover}`\n‚ú® ·¥ò è·¥õ ú·¥è…¥ ·¥†·¥á Äs…™·¥è…¥: `{__python_version__}`\nüçÄ ·¥ú·¥ò·¥õ…™·¥ç·¥á s·¥õ·¥Ä·¥õ·¥ús: `{uptime}`\n\n**·¥õ ú·¥Ä…¥·¥ãs “ì·¥è Ä ·¥Ä·¥Ö·¥Ö…™…¥…¢ ·¥ç·¥á  ú·¥á Ä·¥á, “ì·¥è Ä ·¥ò ü·¥Ä è…™…¥…¢ ·¥ç·¥ús…™·¥Ñ ·¥è…¥  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ·¥†·¥è…™·¥Ñ·¥á ·¥Ñ ú·¥Ä·¥õ** ‚ù§"

    await message.reply_photo(
        photo=f"{ALIVE_IMG}",
        caption=alive,
        reply_markup=keyboard,
    )


@Client.on_message(
    command(["help", f"help@{BOT_USERNAME}"]) & filters.group & ~filters.edited
)
async def help(client: Client, message: Message):
    await message.reply_text(
        f"""‚ú® ** ú·¥á ü ü·¥è** {message.from_user.mention()} !

¬ª **press the button below to read the explanation and see the list of available commands !**

‚ö° __Powered by {BOT_NAME} A.I__""",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton(text="‚ô®Ô∏è…Æ«ü÷Ü…®∆à …¢ ä…®…ñ…õ‚ô®Ô∏è", callback_data="cbguide")]]
        ),
    )


@Client.on_message(command(["ping", f"ping@{BOT_USERNAME}"]) & ~filters.edited)
async def ping_pong(client: Client, message: Message):
    start = time()
    m_reply = await message.reply_text("pinging...")
    delta_ping = time() - start
    await m_reply.edit_text("üèì `÷Ñ…®’º…¢!!`\n" f"‚ö°Ô∏è `{delta_ping * 1000:.3f} ms`")


@Client.on_message(command(["uptime", f"uptime@{BOT_USERNAME}"]) & ~filters.edited)
@sudo_users_only
async def get_uptime(client: Client, message: Message):
    current_time = datetime.utcnow()
    uptime_sec = (current_time - START_TIME).total_seconds()
    uptime = await _human_time_duration(int(uptime_sec))
    await message.reply_text(
        "ü§ñ bot status:\n"
        f"‚Ä¢ **uptime:** `{uptime}`\n"
        f"‚Ä¢ **start time:** `{START_TIME_ISO}`"
    )
